version: '3.8'

services:
  db:
    image: postgres:13
    container_name: movie-review-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretsanta0123}
      POSTGRES_DB: ${POSTGRES_DB:-movie_review_db}
    ports:
      - "${DOCKER_DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8001:8000"
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretsanta0123}
      POSTGRES_DB: ${POSTGRES_DB:-movie_review_db}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      SECRET_KEY: ${SECRET_KEY:-secretsanta}
    volumes:
      - ./user-service:/app

  movie-service:
    build: ./movie-service
    container_name: movie-service
    ports:
      - "8002:8000"
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretsanta0123}
      POSTGRES_DB: ${POSTGRES_DB:-movie_review_db}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
    volumes:
      - ./movie-service:/app

  review-service:
    build: ./review-service
    container_name: review-service
    ports:
      - "8003:8000"
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretsanta0123}
      POSTGRES_DB: ${POSTGRES_DB:-movie_review_db}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
    volumes:
      - ./review-service:/app

  test-runner:
    build: .
    container_name: test-runner
    depends_on:
      - user-service
      - movie-service
      - review-service
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: ["tail", "-f", "/dev/null"]

volumes:
  postgres_data:
